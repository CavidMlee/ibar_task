{"version":3,"sources":["reportWebVitals.js","components/Pagination/index.js","components/UndoDelete/index.js","components/Button/index.js","components/Input/index.js","store/firstData.js","container/Main/index.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Pagination","maxPages","currentPage","setCurrentPage","items","leftSide","rightSide","number","push","RoundEffect","active","onClick","Container","className","styled","div","props","UndoData","forwardRef","ref","undo","useState","show","setShow","done","setDone","useImperativeHandle","showUndoPanel","BodyContainer","center","swingViewport","keyframes","Button","title","deleteColor","rest","StyledButton","button","Input","StyledInput","input","firstDataSlice","createSlice","name","initialState","data","json","reducers","firstDataAction","state","action","payload","actions","firstDataReducer","reducer","allDeletedItem","lastDeleteItems","allEditItems","Main","page","setPage","setData","editItem","setEditItem","checkedItems","setCheckedItems","firstData","useSelector","undoRef","useRef","dispatch","useDispatch","useEffect","sortFirstData","slice","sort","a","b","id","formDataValue","fd","keys","key","get","onHandleDelete","dataCopy","i","length","deletedItem","splice","map","item","toString","indexOf","allEditItemsIndex","current","onCheckedRow","event","checked","target","notInclude","filter","includes","checkItemsCopy","SearchContainer","onChange","e","filterData","toUpperCase","value","Promise","all","results","onSubmit","preventDefault","form","formdata","FormData","newData","index","findIndex","baseDataSort","Object","reduce","obj","changeDataSort","entries","alert","onSubmite","StyledTable","type","surname","dateOfBirth","position","phoneNumber","hidden","defaultValue","onHandleEdit","console","log","Math","ceil","onUndoItem","table","configureStore","devTools","process","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2bace6d9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport const Pagination = ({ maxPages, currentPage, setCurrentPage }) => {\n\n\n    let items = [];\n    let leftSide = currentPage - 2;\n    if (leftSide <= 0) { leftSide = 1 };\n    let rightSide = currentPage + 2;\n    if (rightSide > maxPages) { rightSide = maxPages };\n    for (let number = leftSide; number <= rightSide; number++) {\n        items.push(\n            <RoundEffect key={number} active={number === currentPage} onClick={() => { setCurrentPage(number) }}>\n                {number}\n            </RoundEffect>,\n        );\n    }\n    const nextPage = () => {\n        if (currentPage < maxPages) {\n            setCurrentPage(currentPage + 1)\n        }\n    }\n\n    const prevPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage(currentPage - 1)\n        }\n    }\n\n    const paginationRender = (\n        <Container>\n            <div className=\"paginate-ctn\">\n                <RoundEffect onClick={prevPage}> &lsaquo; </RoundEffect>\n                {items}\n                <RoundEffect onClick={nextPage}> &rsaquo; </RoundEffect>\n            </div>\n        </Container>\n    );\n    return (paginationRender);\n}\n\nPagination.propTypes = {\n    maxPages: PropTypes.number,\n    currentPage: PropTypes.number,\n    setCurrentPage: PropTypes.func\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  &>div{\n      padding-top:10px;\n  }\n  .paginate-ctn{\n    display: flex;\n  }\n\n`\n\nconst RoundEffect = styled.div`\n  color: ${props => props.active ? 'white' : ' rgb(37, 90, 236)'};\n  background-color: ${props => props.active ? 'rgb(37, 90, 236)' : '#FFF'} ;\n  cursor:pointer;\n  font-size:16px;\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  padding:10px;\n  border-radius: 20%;\n  height: 30px;\n  width: 30px;\n  margin:5px;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  text-decoration: none;\n  &:hover{\n    text-decoration: none;\n    background:rgb(37, 90, 236);\n    color:#FFF;  \n    a{\n     text-decoration: none;\n     color:#FFF;\n    }\n  }\n`","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport const UndoData = forwardRef(({ undo }, ref) => {\n    const [show, setShow] = useState(false)\n    const [done, setDone] = useState(false)\n\n    useImperativeHandle(ref, () => ({\n\n        showUndoPanel(show) {\n            setShow(show)\n            setDone(false)\n        }\n\n    }));\n\n    const onUndoItems = () => {\n        undo()\n        setDone(true)\n    }\n    return (\n        <div>\n            {show &&\n                <Container >\n                    <BodyContainer >\n                        <div className='cancle_btn' onClick={() => setShow(false)}>X</div>\n                        {done ? <span>Geri qaytarıldı</span>\n                            : <div className='undo_btn' onClick={onUndoItems} >Geri qaytar</div>\n                        }\n                    </BodyContainer>\n\n                </Container>\n            }\n        </div>\n\n    )\n})\n\nUndoData.propTypes = {\n    undo: PropTypes.func\n}\nconst center = `\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nconst swingViewport = keyframes`\n    from {\n      transform: translateX(-300px);\n    }\n    to {\n      transform: translateX(0px);\n    }\n  `\n\nconst Container = styled.div`\n    position:absolute;\n    bottom: 50px;\n    left: 20px;\n    width: 250px;\n    height: 80px;\n    background-color: rgb(216 227 255);\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.15);\n    border-radius: 5px;\n    animation: 1s ease-in-out ${swingViewport};\n    display: block;\n    border-bottom: 4px solid rgb(60, 97, 197);\n`\nconst BodyContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    ${center}\n    .cancle_btn{\n        position: absolute;\n        top:5px;\n        right: 10px;\n        color:black;\n        width: 20px;\n        height: 20px;\n        text-align: center;\n        border-radius: 5px;\n        cursor: pointer;\n    \n    }\n    .undo_btn{\n        width: 100px;\n        height: 40px;\n        background-color: rgb(37, 90, 236);\n        color:white;\n        border-radius: 5px;\n        ${center}\n        cursor: pointer;\n    }\n`","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ title, deleteColor = false, ...rest }) => {\n    return (\n        <StyledButton {...rest} deleteColor={deleteColor}>\n            <span>{title}</span>\n        </StyledButton>\n    )\n}\n\nButton.propTypes = {\n    title: PropTypes.string,\n    deleteColor: PropTypes.bool,\n}\n\nconst StyledButton = styled.button`\n    background-color:${props => props.deleteColor ? '#c72b2b' : '#4CAF50'} ;\n    border: none;\n    color: white;\n    padding: 10px 15px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 15px;\n    cursor: pointer;\n    border-radius: 5px;\n    margin: 0 10px;\n`","import React from 'react';\nimport styled from 'styled-components';\n\n\nexport const Input = ({ ...rest }) => {\n    return (\n        <StyledInput {...rest}></StyledInput>\n    )\n}\n\n\nconst StyledInput = styled.input`\n    height: 35px;\n    background-color: transparent;\n    border: solid 1px #c5c5c5;\n    border-radius: 5px;\n    padding: 0 5px\n`","import { createSlice } from '@reduxjs/toolkit'\nimport json from '../data/index.json'\n\nexport const firstDataSlice = createSlice({\n    name: 'firstData',\n    initialState: {\n        data: json,\n    },\n    reducers: {\n        firstDataAction: (state, action) => {\n            state.data = action.payload\n        },\n    },\n})\n\nexport const { firstDataAction } = firstDataSlice.actions\n\nexport const firstDataReducer = firstDataSlice.reducer","import React, { useState, useEffect, useRef } from 'react';\nimport json from '../../data/index.json';\nimport { Pagination, UndoData, Button, Input } from '../../components';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { firstDataAction } from '../../store/firstData'\n\n\nconst rowCount = 10\nlet allDeletedItem = []\nlet lastDeleteItems = []\nlet allEditItems = []\n\n\nconst Main = () => {\n\n    const [page, setPage] = useState(1)\n    const [data, setData] = useState([])\n    const [editItem, setEditItem] = useState(null)\n    const [checkedItems, setCheckedItems] = useState([])\n\n    const firstData = useSelector(state => state.firstData.data)\n\n\n    const undoRef = useRef();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const sortFirstData = firstData?.slice().sort((a, b) => a.id - b.id);\n        setData(sortFirstData.slice(page * rowCount - rowCount, page * rowCount))\n    }, [page, firstData])\n\n    const onHandleEdit = (item) => {\n        setEditItem(item)\n    }\n\n    const onSubmite = (event) => {\n        event.preventDefault();\n\n        const form = event.target;\n        const formdata = new FormData(form);\n\n        let newData = [...firstData]\n        let index = newData.findIndex(item => item.id.toString() === formDataValue(formdata).id)\n\n        if (index > -1) {\n            const item = newData[index];\n\n            const baseDataSort = Object.keys(item).sort().reduce(\n                (obj, key) => {\n                    obj[key] = item[key];\n                    return obj;\n                },\n                {}\n            );\n\n            const changeDataSort = Object.keys(formDataValue(formdata)).sort().reduce(\n                (obj, key) => {\n                    obj[key] = formDataValue(formdata)[key];\n                    return obj;\n                },\n                {}\n            );\n\n            if (Object.entries(baseDataSort).toString() === Object.entries(changeDataSort).toString()) {\n                setEditItem(null)\n                alert('Məlumatlar eyni olduğu üçün yenilənmə olmadı')\n            }\n            else {\n                newData.splice(index, 1, { ...item, ...formDataValue(formdata) })\n                dispatch(firstDataAction(newData))\n                allEditItems = [...allEditItems, { ...item, ...formDataValue(formdata) }]\n            }\n\n        }\n\n\n    }\n\n    const formDataValue = (fd) => {\n        const data = {};\n        for (let key of fd.keys()) {\n            data[key] = fd.get(key);\n        }\n        return data;\n    }\n\n\n    const onHandleDelete = async () => {\n\n        let dataCopy = [...firstData]\n        lastDeleteItems = []\n        for (let i = 0; i < checkedItems.length; i++) {\n\n            const deletedItem = dataCopy.splice(dataCopy.map(item => { return item.id.toString() }).indexOf(checkedItems[i]), 1)\n            allDeletedItem = [...allDeletedItem, ...deletedItem];\n            lastDeleteItems = [...lastDeleteItems, ...deletedItem];\n\n            let allEditItemsIndex = allEditItems.map(item => { return item.id.toString() }).indexOf(checkedItems[i])\n            if (allEditItemsIndex > -1) {\n                allEditItems.splice(allEditItemsIndex, 1)\n            }\n        }\n\n        setCheckedItems([])\n        dispatch(firstDataAction([...dataCopy]))\n\n        undoRef.current.showUndoPanel(true)\n\n    }\n\n    const onUndoItem = () => {\n        dispatch(firstDataAction([...firstData, ...lastDeleteItems]))\n\n        for (let i = 0; i < lastDeleteItems.length; i++) {\n            allDeletedItem.splice(allDeletedItem.map(item => { return item.id.toString() }).indexOf(lastDeleteItems[i]), 1)\n        }\n    }\n\n\n    const onCheckedRow = (event, id) => {\n\n        let checked = event.target.checked;\n\n        if (event.target.name === 'all') {\n            if (!checked) {\n                setCheckedItems([])\n            }\n            else {\n                const notInclude = data.filter(item => !checkedItems.includes(item.id.toString())).map(i => { return i.id.toString() })\n                setCheckedItems([\n                    ...checkedItems,\n                    ...notInclude\n\n                ])\n            }\n\n        }\n        else {\n            if (checkedItems.includes(id.toString())) {\n                if (checked === false) {\n                    const checkItemsCopy = [...checkedItems]\n                    checkItemsCopy.splice(checkedItems.indexOf(id.toString()), 1);\n                    setCheckedItems(checkItemsCopy);\n                }\n            }\n            else {\n                setCheckedItems([...checkedItems, event.target.name]);\n            }\n\n        }\n    }\n\n    const handleSerchItem = (e) => {\n        const filterData = json.filter(item => item.title.toUpperCase().includes(e.target.value.toUpperCase() || ''))\n\n        Promise.all(filterData).then(function (results) {\n            dispatch(firstDataAction(results))\n        })\n    }\n\n    const handleResetData = () => {\n        dispatch(firstDataAction(json))\n        allDeletedItem = []\n        lastDeleteItems = []\n        allEditItems = []\n    }\n\n    return (\n        <Container >\n            <SearchContainer>\n                <label>Search title: </label>\n                <Input name='search' onChange={handleSerchItem} />\n            </SearchContainer>\n            <form id='table_form' onSubmit={(e) => onSubmite(e)}></form>\n            <StyledTable>\n                <thead>\n                    <tr>\n                        <th><input type=\"checkbox\" checked={checkedItems.length >= data.length} id=\"all\" name=\"all\" onChange={(e) => onCheckedRow(e)} /></th>\n                        <th>Id</th>\n                        <th>Name</th>\n                        <th>Surname</th>\n                        <th>Date of birth</th>\n                        <th>Position</th>\n                        <th>Phone number</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data?.map((item, index) => {\n                        const { id, name, surname, dateOfBirth, position, phoneNumber } = item\n\n\n                        return (\n                            <tr key={id}>\n                                {id === editItem?.id ?\n                                    <>\n                                        <td><input hidden type=\"checkbox\" id={id} checked={false} name={id} onChange={(e) => onCheckedRow(e)} /></td>\n\n                                        <td>\n                                            {id}\n                                            <Input\n                                                name='id'\n                                                defaultValue={id}\n                                                onChange={() => { }}\n                                                hidden\n                                                form='table_form'\n                                            />\n                                        </td>\n                                        <td>\n                                            <Input\n                                                defaultValue={name || \" \"}\n                                                onChange={() => { }}\n                                                name={`name`}\n                                                form='table_form'\n                                            />\n                                        </td>\n                                        <td>\n                                            <Input\n                                                defaultValue={surname || \" \"}\n                                                onChange={() => { }}\n                                                name={`surname`}\n                                                form='table_form'\n                                            />\n                                        </td>\n                                        <td>\n                                            <Input\n                                                defaultValue={dateOfBirth || \" \"}\n                                                onChange={() => { }}\n                                                name={`dateOfBirth`}\n                                                form='table_form'\n                                            />\n                                        </td>\n                                        <td>\n                                            <Input\n                                                defaultValue={position || \" \"}\n                                                onChange={() => { }}\n                                                name={`position`}\n                                                form='table_form'\n                                            />\n                                        </td>\n                                        <td>\n                                            <Input\n                                                defaultValue={phoneNumber || \" \"}\n                                                onChange={() => { }}\n                                                name={`phoneNumber`}\n                                                form='table_form'\n                                            />\n                                        </td>\n\n                                        <td>\n                                            <Button form='table_form' type=\"submit\" title='Save' />\n                                            <Button onClick={() => setEditItem(null)} title='Cancel' />\n                                        </td>\n\n                                    </>\n                                    :\n                                    <>\n                                        <td><input type=\"checkbox\" checked={checkedItems.includes(id.toString())} id={id} name={id} onChange={(e) => onCheckedRow(e, id)} /></td>\n                                        <td>{id}</td>\n                                        <td>{name}</td>\n                                        <td>{surname}</td>\n                                        <td>{dateOfBirth}</td>\n                                        <td>{position}</td>\n                                        <td>{phoneNumber}</td>\n\n                                    </>\n                                }\n                                {id !== editItem?.id && <td>\n                                    <Button type='button' onClick={() => onHandleEdit(item)} title='Edit' />\n\n                                </td>\n                                }\n\n\n                            </tr>\n                        )\n                    })}\n\n                </tbody>\n            </StyledTable>\n\n            <Button deleteColor onClick={onHandleDelete} title='Delete' />\n\n            <Button onClick={() => {\n                alert('updated və deleted məlumatları consolda göstərilib')\n                console.log({ 'updated': allEditItems, 'deleted': allDeletedItem })\n            }}\n                title='Submite' />\n\n            <Button deleteColor onClick={handleResetData} title='Reset Data' />\n\n            <div>\n                <Pagination currentPage={page} setCurrentPage={setPage} maxPages={Math.ceil(firstData.length / 10)} />\n            </div>\n            <UndoData ref={undoRef} undo={e => onUndoItem(e)} />\n\n        </Container>\n    )\n}\n\nexport default Main;\n\nconst Container = styled.div`\n    position: relative;\n    height: 100vh;\n    width: 100vw;\n`\n\nconst StyledTable = styled.table`\n    border-collapse: collapse;\n    width: 100%;\n    margin:50px 0;\n    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n    \n  td, th {\n    text-align: left;\n    padding: 8px\n    }\n  th {\n    background-color: rgb(82 116 210);\n    color: white;\n    }\n  tr:nth-child(even)\n    {background-color: #f2f2f2}\n\n`\nconst SearchContainer = styled.div`\n    margin-top:30px;\n`","import { configureStore } from '@reduxjs/toolkit';\nimport { firstDataReducer } from './firstData'\n\nexport default configureStore({\n    devTools: process.env.NODE_ENV !== \"production\",\n    reducer: {\n        firstData: firstDataReducer\n    },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Main from './container/Main';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}